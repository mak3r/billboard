# python generated by blockly
from m5stack import *
from m5ui import *
from uiflow import *
import machine
from easyIO import *

setScreenColor(0x111111)


brightness = None



label0 = M5TextBox(25, 92, "Text", lcd.FONT_DejaVu40, 0xFFFFFF, rotate=0)



def buttonA_wasPressed():
  global brightness, pin0
  if brightness > 0:
    timerSch.stop('bat_status')
    brightness = 0
    axp.setLcdBrightness(brightness)
    machine.deepsleep(20000)
  else:
    timerSch.run('bat_status', 1000, 0x00)
    brightness = 30
    axp.setLcdBrightness(brightness)
  pass
btnA.wasPressed(buttonA_wasPressed)

def buttonB_wasPressed():
  global brightness, pin0
  if (pin0.value()) == 1:
    M5Led.on()
    brightness = 100
    axp.setLcdBrightness(brightness)
  else:
    M5Led.off()
    brightness = 0
    axp.setLcdBrightness(brightness)
  pass
btnB.wasPressed(buttonB_wasPressed)

@timerSch.event('bat_status')
def tbat_status():
  global brightness, pin0
  print((str('Battery: ') + str(((str((map_value((axp.getBatVoltage()), 3.7, 4.1, 0, 100))) + str('%'))))))
  label0.setText(str((str((map_value((axp.getBatVoltage()), 3.7, 4.1, 0, 100))) + str('%'))))
  pass


import esp32
p37 = machine.Pin(37, mode = machine.Pin.IN, pull = machine.Pin.PULL_UP)

p37.irq(trigger = machine.Pin.WAKE_LOW, wake = machine.DEEPSLEEP)
pin0 = machine.Pin(10, mode=machine.Pin.OUT, pull=machine.Pin.PULL_UP)
brightness = 30
axp.setLcdBrightness(brightness)
if machine.reset_cause() == machine.DEEPSLEEP_RESET:
    print('woke from a deep sleep')
while True:
  wait_ms(2)
